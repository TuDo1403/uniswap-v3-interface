{"ast":null,"code":"import{nativeOnChain}from'constants/tokens';import{Chain}from'graphql/data/__generated__/types-and-hooks';import{CHAIN_NAME_TO_CHAIN_ID}from'graphql/data/util';export function getNativeTokenDBAddress(chain){var pageChainId=CHAIN_NAME_TO_CHAIN_ID[chain];switch(chain){case Chain.Celo:case Chain.Polygon:return nativeOnChain(pageChainId).wrapped.address;case Chain.Ethereum:case Chain.Arbitrum:case Chain.EthereumGoerli:case Chain.Optimism:return'ETH';}}","map":{"version":3,"names":["nativeOnChain","Chain","CHAIN_NAME_TO_CHAIN_ID","getNativeTokenDBAddress","chain","pageChainId","Celo","Polygon","wrapped","address","Ethereum","Arbitrum","EthereumGoerli","Optimism"],"sources":["/Users/dotu/repo/interface/src/utils/nativeTokens.ts"],"sourcesContent":["import { nativeOnChain } from 'constants/tokens'\nimport { Chain } from 'graphql/data/__generated__/types-and-hooks'\nimport { CHAIN_NAME_TO_CHAIN_ID } from 'graphql/data/util'\n\nexport function getNativeTokenDBAddress(chain: Chain): string {\n  const pageChainId = CHAIN_NAME_TO_CHAIN_ID[chain]\n  switch (chain) {\n    case Chain.Celo:\n    case Chain.Polygon:\n      return nativeOnChain(pageChainId).wrapped.address\n    case Chain.Ethereum:\n    case Chain.Arbitrum:\n    case Chain.EthereumGoerli:\n    case Chain.Optimism:\n      return 'ETH'\n  }\n}\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,kBAAkB,CAChD,OAASC,KAAK,KAAQ,4CAA4C,CAClE,OAASC,sBAAsB,KAAQ,mBAAmB,CAE1D,MAAO,SAASC,wBAAuB,CAACC,KAAY,CAAU,CAC5D,GAAMC,YAAW,CAAGH,sBAAsB,CAACE,KAAK,CAAC,CACjD,OAAQA,KAAK,EACX,IAAKH,MAAK,CAACK,IAAI,CACf,IAAKL,MAAK,CAACM,OAAO,CAChB,MAAOP,cAAa,CAACK,WAAW,CAAC,CAACG,OAAO,CAACC,OAAO,CACnD,IAAKR,MAAK,CAACS,QAAQ,CACnB,IAAKT,MAAK,CAACU,QAAQ,CACnB,IAAKV,MAAK,CAACW,cAAc,CACzB,IAAKX,MAAK,CAACY,QAAQ,CACjB,MAAO,KAAK,EAElB"},"metadata":{},"sourceType":"module"}