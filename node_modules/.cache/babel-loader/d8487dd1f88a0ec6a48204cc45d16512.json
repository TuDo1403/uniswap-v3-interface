{"ast":null,"code":"import { nativeOnChain } from 'constants/tokens';\nimport { Chain } from 'graphql/data/__generated__/types-and-hooks';\nimport { CHAIN_NAME_TO_CHAIN_ID } from 'graphql/data/util';\nexport function getNativeTokenDBAddress(chain) {\n  const pageChainId = CHAIN_NAME_TO_CHAIN_ID[chain];\n  switch (chain) {\n    case Chain.Celo:\n    case Chain.Polygon:\n      return nativeOnChain(pageChainId).wrapped.address;\n    case Chain.Ethereum:\n    case Chain.Arbitrum:\n    case Chain.EthereumGoerli:\n    case Chain.Optimism:\n      return 'ETH';\n  }\n}","map":{"version":3,"names":["nativeOnChain","Chain","CHAIN_NAME_TO_CHAIN_ID","getNativeTokenDBAddress","chain","pageChainId","Celo","Polygon","wrapped","address","Ethereum","Arbitrum","EthereumGoerli","Optimism"],"sources":["/Users/dotu/repo/interface/src/utils/nativeTokens.ts"],"sourcesContent":["import { nativeOnChain } from 'constants/tokens'\nimport { Chain } from 'graphql/data/__generated__/types-and-hooks'\nimport { CHAIN_NAME_TO_CHAIN_ID } from 'graphql/data/util'\n\nexport function getNativeTokenDBAddress(chain: Chain): string {\n  const pageChainId = CHAIN_NAME_TO_CHAIN_ID[chain]\n  switch (chain) {\n    case Chain.Celo:\n    case Chain.Polygon:\n      return nativeOnChain(pageChainId).wrapped.address\n    case Chain.Ethereum:\n    case Chain.Arbitrum:\n    case Chain.EthereumGoerli:\n    case Chain.Optimism:\n      return 'ETH'\n  }\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,KAAK,QAAQ,4CAA4C;AAClE,SAASC,sBAAsB,QAAQ,mBAAmB;AAE1D,OAAO,SAASC,uBAAuB,CAACC,KAAY,EAAU;EAC5D,MAAMC,WAAW,GAAGH,sBAAsB,CAACE,KAAK,CAAC;EACjD,QAAQA,KAAK;IACX,KAAKH,KAAK,CAACK,IAAI;IACf,KAAKL,KAAK,CAACM,OAAO;MAChB,OAAOP,aAAa,CAACK,WAAW,CAAC,CAACG,OAAO,CAACC,OAAO;IACnD,KAAKR,KAAK,CAACS,QAAQ;IACnB,KAAKT,KAAK,CAACU,QAAQ;IACnB,KAAKV,KAAK,CAACW,cAAc;IACzB,KAAKX,KAAK,CAACY,QAAQ;MACjB,OAAO,KAAK;EAAA;AAElB"},"metadata":{},"sourceType":"module"}